package app.victor.sentinela.imbituba.tabactivity;

import java.io.ByteArrayOutputStream;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.Calendar;

import android.annotation.SuppressLint;
import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.os.Bundle;
import android.provider.MediaStore;
import android.support.v4.app.Fragment;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;
import app.victor.sentinela.imbituba.R;
import app.victor.sentinela.imbituba.bancodados.TerrenoORM;
import app.victor.sentinela.imbituba.bdclasses.Terreno;

public class NotificacaoFragment extends Fragment implements OnClickListener {

    private static int terrenoSelecionadoID = 0;
    private static String cidadeSelecionada;
    private TextView sessionInfo;
    private ImageView notificacaoFoto;

    // variables
    private static final int REQUEST_PICTURE = 1000;

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {

        View view = inflater.inflate(R.layout.fragment_notificacao, container, false);
        sessionInfo = (TextView) view.findViewById(R.id.username_sessionData);

        // notificacaoFoto = (ImageView)
        // rootView.findViewById(R.id.imageViewFotoInfracao);

        setUserSessionData();
        cidadeSelecionada = DetalhesTerrenoActivity.getCidadeSelecionada();
        terrenoSelecionadoID = DetalhesTerrenoActivity.getTerrenoSelecionadoID();

        Toast.makeText(getActivity().getApplicationContext(), "ID do terreno escolhido " + terrenoSelecionadoID, Toast.LENGTH_LONG).show();

        Terreno terrenoEscolhido = TerrenoORM.getTerrenofromID(getActivity().getApplicationContext(), terrenoSelecionadoID);

        TextView proprietarioTerreno = (TextView) view.findViewById(R.id.terrenoProprietario);
        proprietarioTerreno.setText(terrenoEscolhido.getProprietario());

        TextView enderecoTerreno = (TextView) view.findViewById(R.id.terrenoEndereco);
        enderecoTerreno.setText(terrenoEscolhido.getEndereco() + ", " + terrenoEscolhido.getNumeroString());

        TextView bairroTerreno = (TextView) view.findViewById(R.id.terrenoBairro);
        bairroTerreno.setText(terrenoEscolhido.getBairro());

        TextView cidadeTerreno = (TextView) view.findViewById(R.id.terrenoCidade);
        cidadeTerreno.setText(terrenoEscolhido.getCidade() + "/" + terrenoEscolhido.getEstado());

        String formatedDate = getCurrentDateTime();

        File picsDir = null;
        String picName = "obra-" + formatedDate + ".jpg";
        File picFile = new File(picsDir, picName);

        Log.d("DEBUG", "foto_path: " + picFile.getAbsolutePath());
        Log.d("DEBUG", "foto_file: " + picFile.getAbsoluteFile());

        ImageView notificacaoImage = (ImageView) view.findViewById(R.id.imageViewFotoInfracao);
        notificacaoImage.setOnClickListener(this);

        Button buttonVoltar = (Button) view.findViewById(R.id.btn_voltar);
        buttonVoltar.setOnClickListener(this);

        Button buttonImprimir = (Button) view.findViewById(R.id.btn_imprimir);
        buttonImprimir.setOnClickListener(this);

        return view;
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()) {
            case R.id.imageViewFotoInfracao:
                Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
                startActivityForResult(intent, REQUEST_PICTURE);
                break;
            case R.id.btn_voltar:
                Intent backToMaps = new Intent(getActivity(), app.victor.sentinela.imbituba.mapstuff.MapsActivity.class);
                // moveTaskToBack(true);
                backToMaps.putExtra("CidadeSelecionada", cidadeSelecionada);
                startActivity(backToMaps);
                break;
            case R.id.btn_imprimir:
                Intent goPrinter = new Intent(getActivity(), app.victor.sentinela.imbituba.printer.BluetoothPrinterActivity.class);
                // moveTaskToBack(true);
                startActivity(goPrinter);
                break;
                
            default: break;
        }
    }

    @SuppressLint("SimpleDateFormat")
    public String getCurrentDateTime() {
        Calendar c;
        SimpleDateFormat dateTime;
        String formatedDate;
        c = Calendar.getInstance();
        dateTime = new SimpleDateFormat("dd-MM-yyyy-HH-mm");
        formatedDate = dateTime.format(c.getTime());
        return formatedDate;        
    }

    public void setUserSessionData() {
        //passar pra função, jogar como parametro a textview a escrever usuarioLogado e usuarioUltimoLogin
        SharedPreferences sharedPreferences = this.getActivity().getSharedPreferences(app.victor.sentinela.imbituba.login.LoginActivity.userPreferences, Context.MODE_PRIVATE);

        String usuarioLogado = sharedPreferences.getString(app.victor.sentinela.imbituba.login.LoginActivity.usuarioLogado, "");
        String usuarioUltimoLogin = sharedPreferences.getString(app.victor.sentinela.imbituba.login.LoginActivity.ultimoLogin, "");
        if (!usuarioLogado.equals("") && !usuarioUltimoLogin.equals("")) {
            sessionInfo.setText("Usuário Logado: " + usuarioLogado + "\nÚltimo login: " + usuarioUltimoLogin);
        }
    }

    public void logout(View view) {
        //passar pra função, colocar a Activity que esta chamando a função como parâmetro, além de passar o widget a ser clicado, ex: logout(view, this);
        SharedPreferences sharedPreferences = this.getActivity().getSharedPreferences(app.victor.sentinela.imbituba.login.LoginActivity.userPreferences, Context.MODE_PRIVATE);
        Editor editor = sharedPreferences.edit();
        String usuarioLogadoCheck = sharedPreferences.getString(app.victor.sentinela.imbituba.login.LoginActivity.usuarioLogado, "");
        if (!usuarioLogadoCheck.equals("")) {
            Toast.makeText(getActivity().getApplicationContext(), "Logout do usuário " + usuarioLogadoCheck, Toast.LENGTH_LONG).show();
            editor.clear();
            editor.commit();
        }

        getActivity().moveTaskToBack(true);
        getActivity().finish();
        Intent goLogin = new Intent(getActivity(), app.victor.sentinela.imbituba.login.LoginActivity.class);
        // Limpa a stack de activities pra resolver o bug do usuário apertar o
        // botão de voltar e ele voltar na sessão já logado pelo
        // sharedPreferences
        goLogin.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
        startActivity(goLogin);
    }

    // public void btn_voltar() {
    // Intent backToMaps = new Intent(getActivity(),
    // app.victor.sentinela.imbituba.mapstuff.MapsActivity.class);
    // // moveTaskToBack(true);
    // backToMaps.putExtra("CidadeSelecionada", cidadeSelecionada);
    // startActivity(backToMaps);
    // }

    /**
     * Método chamado quando a aplicação nativa da câmera é finalizada
     */
    @SuppressLint("NewApi")
    @Override
    public void onActivityResult(int requestCode, int resultCode, Intent data) {
        /*
         * Verifica o código de requisição e se o resultado é OK (outro
         * resultado indica que// o usuário cancelou a tirada da foto)
         */

        if (requestCode == REQUEST_PICTURE) {
            if (resultCode == Activity.RESULT_OK) {
                Log.v("onActivityResult", "Result:OK");

                Bitmap bmp = (Bitmap) data.getExtras().get("data");
                ByteArrayOutputStream stream = new ByteArrayOutputStream();

                bmp.compress(Bitmap.CompressFormat.PNG, 100, stream);
                byte[] byteArray = stream.toByteArray();

                // Convert ByteArray to Bitmap::

                Bitmap bitmap = BitmapFactory.decodeByteArray(byteArray, 0, byteArray.length);

                // notificacaoFoto.setRotation(180);
                notificacaoFoto.setImageBitmap(bitmap);
                // notificacaoFoto.getLayoutParams().width = 400;
                // notificacaoFoto.getLayoutParams().height = 300;
                // notificacaoFoto.setAdjustViewBounds(true);
                /* salvar o bitmap */
                // FileOutputStream out = new FileOutputStream(picFile);
                // picture.compress(Bitmap.CompressFormat.JPEG, 90, out);
                // out.flush();
                // out.close();
                Toast.makeText(this.getActivity(), "Procedimento de fotografia concluído com sucesso.", Toast.LENGTH_SHORT).show();

                // Log.d("DEBUG", "fotoPath " +
                // infracao.get_fotoPath());
                // // Intent intent1 = new Intent(this,
                // // MainActivity.class);
                // Intent intent1 = new Intent(this,
                // RegistraLocalizacao.class);
                // startActivity(intent1);

            } else if (resultCode == Activity.RESULT_CANCELED) {
                // User cancelled the image capture
                Toast.makeText(this.getActivity(), "Interfaceamento com a câmera cancelado.", Toast.LENGTH_SHORT).show();
                // Intent goDetalhesTerreno = new Intent(this.getActivity(),
                // DetalhesTerrenoActivity.class);
                // startActivity(goDetalhesTerreno);

            } else {
                // Image capture failed, advise user
                Toast.makeText(this.getActivity(), "Ocorreu um erro na interface com a câmera do dispositivo.", Toast.LENGTH_SHORT).show();
                // Intent goDetalhesTerreno = new Intent(this.getActivity(),
                // DetalhesTerrenoActivity.class);
                // startActivity(goDetalhesTerreno);
            }
        }

    }


}
